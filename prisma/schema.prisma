// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  name      String   @unique
  avatar    String
  social    String
  email     String
  twitter   String?
  instagram String?
  books     Book[]
  answers   Answer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// TODO: User 데이터 꼭 받는 것으로 바꾸기
model Book {
  id          String     @id @default(uuid())
  thumbnail   String
  title       String     @unique
  description String
  user        User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String?
  startDate   DateTime
  endDate     DateTime
  questions   Question[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  hashtags    Hashtag[]

  @@index([userId])
}

model Question {
  id       Int      @id @default(autoincrement())
  content  String
  required Boolean
  book     Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId   String
  answers  Answer[]

  @@index([bookId])
}

model Answer {
  id         String   @id @default(uuid())
  content    String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([questionId])
  @@index([userId])
}

model Hashtag {
  id    String @id @default(uuid())
  name  String @unique
  books Book[]
}
